EPICS VERSION 4 README
======================

EPICS version 4 [1] is a set of software modules that add to the base [2] of
the EPICS toolkit for advanced control systems. 

This README file describes the download files available for EPICS V4, and
includes all language implementations. 

epics-pvdata is a SourceForge project for managing the development of
EPICS version 4. 

-----------------------------------------------------------------------------

Status: This is the 28-Oct-2015 version of the README.
Mod: 28-Oct-2015, Greg White, Edited for 4.5.0
-----------------------------------------------------------------------------

VERSION 4.5.0
=============

DISTRIBUTION FILES FOR THIS VERSION 
-----------------------------------

The file EPICS-CPP-4.5.0.tar.gz [possibly suffixed -pre or rc] includes all
(and only) the C++ implementation of EPICS V4.5.0. On Unix systems, the tar
file might be unpacked with the command:

  % tar xvfz EPICS-CPP-4.5.0.tar.gz

  Having unpacked, please see the following files at the top level directory:
  RELEASE_NOTES_CPP.md  - Summary of new features and updated in all modules
  README_CPP.md         - Building CPP of EPICS 4.5.0

The file EPICS-Java-4.5.0.tar.gz [possibly suffixed -pre or rc] includes all
(and only) the Java implementation of EPICS V4.5.0. On Unix systems, the tar
file might be unpacked with the command:

  % tar xvfz EPICS-Java-4.5.0.tar.gz

  Having unpacked, please see the following files at [25]:
  RELEASE_NOTES_JAVA.md  - Summary of new features and updated in all modules
  README_JAVA.md         - Jar file extraction instructions.


You may also clone the Mercurial repos directly [22], using the tags for
4.5.0 as specified in RELEASE_VERSIONS [19].

FEATURE SUMMARY
---------------

Please see RELEASE_NOTES_CPP.md and RELEASE_NOTES_JAVA.md [25] for summaries of
new features for each language.

v4.5 builds on the enormous performance upgrades of v4.4, with further
performance improvements, usability improvements, and bug fixes throughout the
system.

New features have also been added.

The pvDatabase module, is a record/database framework for providing data
services over pvAccess. It allows potentially complex data flow model based
processing of structured data PVs, either inside an IOC, or standalone.
pvDatabase, which was introduced in the v4.4 release only in C++ form, is now
also available in Java. For v4.5 the C++ pvDatabase has been extended with
simplified monitoring. The C++ version has found particular use for preparation
of detector image data fanout and processing. The Java version shows promise in
such things as monitoring computed accelerator beam optics parameters.

EPICS v4.5 makes it easier than ever to use the Normative Types - the v4
standard types for scientific data. For C++, new wrappers and builders have been
added, and a whole new library to help use the normative types has been added
for Java.

A new easy-to-use synchronous API for pvAccess, has been added, for both C++ and
Java, named pvaClientCPP/Java. The Java API, easyPVAJava gets new features to
support PVs whose value is the composite of multiple channels (NTMultiChannel).
These will be moved to pvaClientJava in following releases.

All the command line tools; pvget, pvput, eget and pvinfo now support Channel
Access as well as the new protocol of EPICS Version 4, pvAccess.

The Python support has been extended to support unions, and to use native Python
methods for get and set operations.

See the document "Getting Started with EPICS V4,
http://epics-pvdata.sourceforge.net/gettingStarted.html


MODULES COMPRISING VERSION 4.5.0
--------------------------------

The exact modules and their versions, that comprise the EPICS V4.5.0
release, are defined in RELEASE_VERSIONS [19]. This includes the versions of
both the C++ and Java implementation. The distribution tars are in fact
generated automatically from the contents of [19].

C++ Module Summary:

pvAccessCPP        The EPICS V4 communications, analogous to Channel Access;
                   supports pvData [6] [7]
pvDataCPP          Creation and management of memory-resident data structures [8]
pvDatabaseCPP      Smart record/database framework of pvData defined 
                   records, for providing services over pvAccess
normativeTypesCPP  Support for EPICS V4 normative types of pvData structures
pvCommonCPP        Utility libraries
exampleCPP         Code examples, including use of pvData containers, RPC, 
                   demo servers
pvaClientCPP       Easy to use API for synchronous pvAccess communications
pvaSrv             An EPICS Base IOC plugin interfacing CA data to pvAccess
pvaPy              Python API for pvAccess.

Java Module Summary:

pvAccessJava       The EPICS V4 communications, analogous to Channel Access;
                   supports pvData [6][7] 
pvDataJava         The EPICS V4 communications, analogous to Channel Access;
                   supports pvData [8]
pvDatabaseJava     Smart record/database framework of pvData defined 
                   records, for providing services over pvAccess
normativeTypesJava Support for EPICS V4 normative types of pvData structures
easyPVAJava        A somewhat easy-to-use Java API for pvAccess 
pvaClientJava      Easy to use API for synchronous pvAccess communications
exampleJava        Code examples, including use of pvData containers, RPC, 
                   demo servers. 
directoryService   EPICS V4 interface to classic EPICS Channel Finder [20].
caj                An all Java implementation of the Channel Access protocol [3].
jca                A Java API and wrapper interface to the C++ implementation
                   of the Channel Access protocol [4].


SYSTEM REQUIREMENTS AND CONFIGURATION
-------------------------------------
v4.5 supports all versions of EPICS Base since late 3.14.12 (specifically 
including all 3.15 releases. The C++ implementations compile under recent 
versions of Linux, MacOS, VxWorks (6.8 and 6.9) and RTEMS. 

The Java implementation now requires Java 7 or later.

pvAccess parameters, eg EPICS_PVA_ADDR_LIST, are described in the pvAccess 
Configuration spreadsheet [23].

CPU Architectures built and tested are listed in [24].


References
----------
[1] The EPICS V4 homepage, http://epics-pvdata.sourceforge.net
[2] EPICS homepage, http://www.aps.anl.gov/epics
[3] CAJ homepage, such as it is, http://epics-jca.sourceforge.net/caj/
[4] JCA homepage, http://epics-jca.sourceforge.net/jca/
[5] Channel Access Reference, 
http://www.aps.anl.gov/epics/base/R3-14/8-docs/CAref.html
[6] pvAccess Specification, 
http://epics-pvdata.sourceforge.net/pvAccess_Protocol_Specification.html
[7] pvAccess Java documentation,
 http://epics-pvdata.sourceforge.net/docbuild/pvAccessJava/tip/documentation/pvAccessJava.html
[8] pvData Java documentation,
http://epics-pvdata.sourceforge.net/docbuild/pvDataJava/tip/documentation/pvDataJava.html
[9] pvIOC Java documentation, 
http://epics-pvdata.sourceforge.net/docbuild/pvIOCJava/tip/documentation/pvIOCJava.html
[10] RemoteTeo implementation of ONC/RPC, 
https://sourceforge.net/apps/trac/remotetea/wiki/WikiStart
[11] SWTShell for pvIOC, 
http://epics-pvdata.sourceforge.net/doc/pvIOCJava/swtshell.html
[12] SWT: Standard Widget Toolkit, http://www.eclipse.org/swt/
[13] helloWorld runtime setup script, 
https://github.com/epics-base/pvDataWWW/tree/master/src/helloWorld/helloWorld_setup.bash
[14] exampleJava, examples of use of EPICS V4 Java binding, 
https://github.com/epics-base/exampleJava/tree/master/src
[15] ChannelRPC facility javadoc in pvIOC, http://epics-pvdata.sourceforge.net/doc/pvIOCJava/rpcSupport.html
[16] Getting Started with EPICS V4, http://epics-pvdata.sourceforge.net/gettingStarted.html
[17] pvaSrv documentation, http://epics-pvdata.sourceforge.net/docbuild/pvaSrv/tip/documentation/pvaSrv.html
[18] exampleCPP, examples of use of EPICS V4 C++ binding, https://github.com/epics-base/exampleCPP/
[19] RELEASE_VERSIONS, https://github.com/epics-base/pvDataWWW/blob/master/scripts/RELEASE_VERSIONS
[20] EPICS V4 directoryService, http://www.epics2013.org/dms/EPICS2013/presentations/wednesday/Session_3/V4_Lange_ChannelFinder.pdf
[21] EPICS Channel Finder, http://channelfinder.sourceforge.net
[22] Mercurial repos of EPICS V4, https://github.com/epics-base/
[23] pvAccess Configuration, http://epics-pvdata.sourceforge.net/pvAccessConfig.xlsx
[24] EPICS V4 CPU architecture compatibility and test status, http://epics-pvdata.sourceforge.net/Ev4buildtracker.xls
[25] pvDataWWW scripts and READMEs, https://github.com/epics-base/pvDataWWW/tree/master/scripts
